// Generated by CoffeeScript 1.8.0
(function() {
  var config, dataStore, fs, pathToFilename, readFile, save;

  fs = require('fs-extra');

  config = require('./config');

  pathToFilename = function(path) {
    var filename;
    return filename = config.rootPath + path + '.json';
  };

  readFile = function(file) {
    var contents;
    console.log("dataStore readFile()", file);
    contents = fs.readFileSync(file, {
      encoding: 'utf8'
    });
    return JSON.parse(contents);
  };

  save = function(httpRequest, data) {
    var filename, pathComponents, route;
    if (!config.record) {
      return console.error("dataStore.save() doesn't work if you haven't configured a `record` server");
    }
    pathComponents = [config.rootPath, config.apiUrl.hostname, config.apiUrl.port || 80];
    route = httpRequest.path.split('/');
    if (route[0] === '') {
      route.shift();
    }
    Array.prototype.push.apply(pathComponents, route);
    filename = pathComponents.join('/') + '.json';
    return fs.outputJson(filename, data, function(err) {
      if (err) {
        return console.log("Couldn't write file [" + file + "]", err);
      }
    });
  };

  dataStore = {
    GET: function() {
      return readFile(pathToFilename(arguments[0]));
    },
    POST: function() {
      return console.log("dataStore.POST not yet supported", arguments);
    },
    PUT: function() {
      return console.log("dataStore.PUT not yet supported", arguments);
    },
    DELETE: function() {
      return console.log("dataStore.DELETE not yet supported", arguments);
    },
    save: save,
    fetchDataForRequest: function(req, res, next) {
      var data;
      console.log("Request received: " + req.method + " " + req.path);
      data = dataStore[req.method](req.path);
      if (data) {
        res.send(data);
      }
      return next();
    }
  };

  module.exports = dataStore;

}).call(this);
