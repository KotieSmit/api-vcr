// Generated by CoffeeScript 1.8.0
(function() {
  var Server, dataStore, express, fetchDataForRequest, http, onError, onListening, port, proxyRequestAndRecordResponse, recorder;

  express = require('express');

  http = require('http');

  dataStore = require('./dataStore');

  recorder = require('./responseRecorder');

  port = 59007;

  onError = function(error) {
    if (error.syscall !== 'listen') {
      throw error;
    }
  };

  onListening = function() {
    var addr, bind;
    addr = this.server.address();
    bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    return console.log('Listening on ' + bind);
  };

  proxyRequestAndRecordResponse = function(req, res, next) {
    console.log("record");
    return next();
  };

  fetchDataForRequest = function(req, res, next) {
    var data;
    console.log("Request received: " + req.method + " " + req.path);
    data = dataStore[req.method](req.path);
    if (data) {
      res.send(data);
    }
    return next();
  };

  Server = function() {
    return console.log("Constructing a server instance");
  };

  Server.prototype = {
    start: function() {
      this.app = express();
      this.app.use(proxyRequestAndRecordResponse);
      this.app.use(fetchDataForRequest);
      console.log("Starting express server");
      this.server = http.createServer(this.app);
      this.server.listen(port);
      this.server.on('error', onError);
      return this.server.on('listening', onListening.bind(this));
    }
  };

  module.exports = new Server();

}).call(this);
