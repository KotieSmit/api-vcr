// Generated by CoffeeScript 1.8.0
(function() {
  var app, config, dataStore, express, fileScanner, http, onError, onListening, proxyRequestAndRecordResponse, record, recorder, server, start;

  express = require('express');

  http = require('http');

  dataStore = require('./dataStore');

  recorder = require('./responseRecorder');

  fileScanner = require('./fileScanner');

  config = require('./config');

  app = express();

  server = void 0;

  onError = function(error) {
    if (error.syscall !== 'listen') {
      throw error;
    }
  };

  onListening = function() {
    var addr, bind;
    addr = server.address();
    bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    return console.log('Listening on ' + bind);
  };

  proxyRequestAndRecordResponse = function(req, res, next) {
    console.log("recording api responses");
    return next();
  };

  record = function(api) {
    app.use(proxyRequestAndRecordResponse);
    return start();
  };

  start = function(port) {
    app.use(dataStore.fetchDataForRequest);
    console.log("Starting express server");
    server = http.createServer(app);
    server.listen(port || config.defaultPort);
    server.on('error', onError);
    return server.on('listening', onListening);
  };

  module.exports = {
    record: record,
    start: start
  };

}).call(this);
