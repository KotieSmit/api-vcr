// Generated by CoffeeScript 1.8.0
(function() {
  var app, defaultPath, express, file, fileToApiPath, fs, getContents, http, jsonContents, jsonFiles, onError, onListening, port, readFiles, server, _fn, _i, _len;

  fs = require('fs');

  express = require('express');

  http = require('http');

  defaultPath = './data';

  port = 59007;

  jsonFiles = [];

  readFiles = function(path) {
    var contents, file, fullPath, _i, _len;
    try {
      contents = fs.readdirSync(path);
    } catch (_error) {
      console.warn("`" + path + "` is not a folder");
      return;
    }
    for (_i = 0, _len = contents.length; _i < _len; _i++) {
      file = contents[_i];
      fullPath = "" + path + "/" + file;
      console.log(fullPath);
      if (file.indexOf('.json') >= 0) {
        jsonFiles.push(fullPath);
      } else {
        readFiles(fullPath);
      }
    }
    return jsonFiles;
  };

  fileToApiPath = function(filePath) {
    var apiPath, path;
    apiPath = path = filePath.split('.json').join('');
    return apiPath.split(defaultPath).join('');
  };

  getContents = function(paths) {
    var contentsByPath, data, path, _i, _len;
    contentsByPath = {};
    for (_i = 0, _len = paths.length; _i < _len; _i++) {
      path = paths[_i];
      data = fs.readFileSync(path, {
        encoding: 'utf8'
      });
      if (!data) {
        continue;
      }
      contentsByPath[fileToApiPath(path)] = JSON.parse(data);
    }
    return contentsByPath;
  };

  console.log('Creating APIs for the following content:', readFiles(defaultPath));

  jsonContents = getContents(jsonFiles);

  console.log('');

  app = express();

  app.use(function(req, res, next) {
    console.log("Request recieved: " + req.method + " " + req.path);
    return next();
  });

  console.log('Listening for the following Routes:');

  _fn = function() {
    var path;
    path = fileToApiPath(file);
    console.log("GET " + path);
    return app.get(path, function(req, res) {
      console.log("Returning JSON for `" + path + "`", jsonContents[path]);
      return res.send(jsonContents[path]);
    });
  };
  for (_i = 0, _len = jsonFiles.length; _i < _len; _i++) {
    file = jsonFiles[_i];
    _fn();
  }

  console.log('');

  onError = function(error) {
    if (error.syscall !== 'listen') {
      throw error;
    }
  };

  onListening = function() {
    var addr, bind;
    addr = server.address();
    bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    return console.log('Listening on ' + bind);
  };

  console.log("Starting express server");

  server = http.createServer(app);

  server.listen(port);

  server.on('error', onError);

  server.on('listening', onListening);

}).call(this);
